AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: >
  AWS CloudFormation template to store logs in S3 when Lambda function
  invoked.
Parameters:
  apiGatewayStageName:
    Default: Apicall
    Type: String
  apiGatewayHTTPMethod:
    Default: ANY
    Type: String
Resources:
  ApiGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: rest-api-gateway
  ApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ApiGateway
      ResourceId: !GetAtt ApiGateway.RootResourceId
      HttpMethod: ANY
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 
          - >-
            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunctionArn}/invocations
          - LambdaFunctionArn: !GetAtt LambdaFunction.Arn
  ApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - ApiMethod
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: Apicall
  LambdaFunctionExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: LambdaFunctionPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:*'
                  - 's3:*'
                Resource: '*'
  LambdaFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: lambda_function.py
      Handler: lambda_function.lambda_handler
      Role: !GetAtt LambdaFunctionExecutionRole.Arn
      Runtime: python3.9
      Timeout: 50
  ApiGatewayPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: apigateway.amazonaws.com
      FunctionName: !GetAtt LambdaFunction.Arn
      SourceArn: !Sub >-
        arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/${apiGatewayStageName}/${apiGatewayHTTPMethod}/
Outputs:
  LambdaFunctionName:
    Value: !GetAtt LambdaFunction.Arn
  ApiGatewayUrl:
    Value: !Sub >-
      https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${apiGatewayStageName}
